%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 149 218 490 664
%%HiResBoundingBox: 149.000000 218.500000 490.000000 664.000000
%XpdfVersion: 3.03
%%Creator:  XeTeX output 2015.05.26:2047
%%LanguageLevel: 2
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
newpath 149.000000 218.500000 moveto 490.000000 218.500000 lineto 490.000000 664.000000 lineto 149.000000 664.000000 lineto closepath clip
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font BISMJV+CMR10
%!FontType1-1.0: BISMJV+CMR10003.002
12 dict begin
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /BISMJV+CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [-40 -250 1009 750] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 59 /semicolon put
dup 61 /equal put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 114 /r put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FA6B0AF338BD4E48F07258C8AB349EE790EF474E6D540CD5017BDA227D234CDE
C5B56DC44D44AB50DFB075E5E1022F04510349EA668084E7A051605C83646AF5
902E437867493A954EAEF35981EA89706F0AC717DFC491968979A7EF87F475E4
8F22A3A7D7750B755878A9B88483EDC2409C0D58BE116764B583FF78D1FBF3AD
289831C79680B7183956FD64718B7BBE2D8DF65EB9DAA46A90706B45496ACFE9
78439069B8944845B613846CACD0BD317E15DCE9A145D8FBBC072A9854E372E3
A3DDBD2E067ADDD09AD295F6273CC85FC44414D8306E4F4475388E8F16F22266
3EBD64C303BCA92BC8A16DF550BE49E6E28BCC16CB326C0D557AE8847792BD73
8FDE3384358B63B88111A674108F6107CB35D6FDC20ED80713E9AF9E7D4DDA71
D9BC6E4B830E6987093AEA6428807082A2A1A24E65C191B75358EE6AEAC92C17
2240F185F0742260E7D1C466865D2459CE9AFD42BDD0D39133F6DC0C1CF16162
CDC078FF6496B9FF82ECFCBD8FE67828FC17B5CB2D21EBA42F3FB96A983C8EEC
393DE1CF0F2B4E7612E2F0198DA92855F755D15B2FFFFEC8DC53E6DCF8393914
C8F80C1E8A449762893D9AA5AB34325FFEB1AB8FBE09A4DFEA138BB831BDD1B6
3EEF0A264E522A924032D8D833B733E30AC1CE5B5BCFC1B9E1D7DCE8FF44F32F
7F1235103504FB74193793195A4ADE216F0251AC7FEFC1EF39EBB7B43F27026E
91488C4DE7DA0360A85CBC3DABE89A9E9B466076A2F41155E2CC23B865A66821
B9BC4E3EC5F6CC047DBEFACB1376374B532CF5FE3B6564DE88902EEF3CBE9C97
5DDFE7954F0A24AA7CECA91BB32607BBDF7AB00450F5171051AC220166422F8B
A41D838DF459CC0618429BD00B1F80BD498407C045FC3DB4486E3FF62B992437
FD193D4E304DC407E3ACDDFB8904AFB096E09C595BE87145A5D52CBDE30414EE
2115F19B4EF0588865AF910D9C38C4F330B9168652D0F3C5E62929A1D7F2E3FB
DFAAB1C14B1EBB3E45039334EA373772532D5166BE5D560ECB4FE876B43CDFF5
6DB11E81ED2CE9BA941D49D1F252ADB3FB4DC83D7F98365388464CDCF42665E1
50E03F49F0044E729B693D3938DD2940DA20AC52C2F0E22EA6B1611D3CDF3D4C
2E5BB6E5743201077F2F0C0A1FB2AF944E0B39008E7FA2689AF00E5A7B2102EC
6A39107A5B7E42665A6CB3054F3E8CCA73DA61ADA01DCFEC53F15C9F435D2112
881F43BB69509CEF811E36847B16F0ECBC52DF5B122C1CA5D995577903C2C991
3D1020B2E93A82D7D3C0C97B9C25EE784F235F3668EA1F49452F4A81BA81608A
D5164D0B87BF1A4ECACD8B3B26BADE1CA3275E9757DAF6CD7050F302D6356789
4F3B84537C0519CD70DFAE71598B99F89E9775DD913C391B4C83D08EEE2A668C
F57B1E312A7391FC570865B5F8AD2032AC1DA5413274F5DA2444392F304765A5
C3CF6286CA4E5E331F65B36BA046D78B1C2F208FEF51CB664AA2211071B0C692
146F9A4E77164D85273334BC0C1FC20EF0D51BDD4E262A0C3269DEA358E5A38B
01DA6BCE332FBE8D1F25A5B09FA8432F652D13D9B59A9BBC8845A0FD729CEC4F
C9413E13E837F3022D5AD22021493B90120DC218896EA750EE794E9C0B930236
8F66AD42CFA1B0BE12DA1E24BAE21422618C30ADDF0E253748BB7C95045E314E
2EABB6D082B9AA4ED3447A5E2125312A11B1FAEEEF3B78A85EFC835DF840FC11
EE5E5682FA55404394A9D97B51FF3552A8957C8CF0F017613EDDDC62370BF286
237F0E7041043123B8D66333446CCDB022E789945AD19CF8AE8647B2EC764996
D579A445234B62B011E77EDB92654AE7682F91AECA835E61F5CF57E0BD8E430E
62AEA95F0CFA6DA502A32E7A51F57C85A956C6FAEE0EDF2461041C8FC4C4AD0E
F5461E4AB6E4902EE07C0C62A97F4E0ED18B338DCF555350D6E8A3C09516B08F
D57D4626011B7B1451D61F49641509A05A0FC6BAAFB6073EB88369DE019C00EA
81473923752749F9F2F61B7F527798D4691F0A08EDE92CA5571023FF00694FA6
F00CE869DF306659526A45F2E11CB9E3899E5D1EE27EAE240D4D764241A32EF8
DBC36AC17368B06425583F8A03FEDEE888E54C81CC885DCD914F789CD96F39ED
8927A356761AAAA387F9537561754414C8D93F76DC3D851426C1CFB4EA1C3F32
7FC9AFAB963C3417B9231B1590F711150EE38491ADEA7C01EB505C1D2DF5CBDF
9571C9D8CDE576625EDF77329D9DA9AA19BF39E4DC755E37B7A5BAFAB53C52C2
4D87D87AC149DD508935E719CA671F27C632F25B372EBCF24A35357A59615089
1C94ED4D99461A225112D772B12B5693502E068E334995549B58C459CF6A4E5B
D0DD25D85438E541401AAF549DB831BAE663A0A380FE897498F4F66F1E299AC2
6E49E2161800E1C93D109BA9634B8608E12DF9064FD9DFD4D5A5726FA185718D
9641ADAD9E2F1C92E1EF7985C0A1566FB0B76E79B4F2CC6045C3726100A80157
E2CFECCB06D6157CA5DF5ED2BAE42FB850C5202AC8322815D7725E4758F78176
4DB131D782E4013F169EB88D03EB1E325B56C9242B8F6A84CD4EF8391B54C485
706ABF46E8B8B03250121CACB9412CAADC09C3AC252A389C9C1A9D82C8E4A346
EEAAACD35A1B6393612AB4AB19A7EA1C8180E4F9E154C59F16A33B108E83B4AF
1B248B96AC02EC42A6ECA2E94E6EFA992EB264599916EB57E8D7B89C32FCD6E2
FBCDD0EADD8178DF2EC077636A9D2C32873EC22658B3BA32E37D01D9E36B0542
AF60138462453C2182E84FF2C1C5BE87A5EB3A9BB09D4F507419B73C165D28A7
E5AF0E3976EDCF0CF264B0FD7013597D38E97C7370B2FF4FDC282EED62882EBA
83368440BF6185182A69C1F44E8BE02FC003919765B2CB71459F710E7F8D149D
2148E520D884385BF87B0E567ACD5D1BEE0DAF8DA17C20DD71B8ACE2EA397875
20458541515079F7715C30F88B8AAF1C6DE99E68
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F38_0 /BISMJV+CMR10 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 612 792 re
W
q
q
[1 0 0 1 72 720] cm
[1 0 0 1 0 0] Tm
0 0 Td
76.71 -62.76 Td
/F38_0 9.963 Tf
(r1=4.36;)
[3.902507
0
4.9815
0
7.749221
0
4.9815
0
2.767721
0
4.9815
0
4.9815
0
2.767721
0] Tj
-333 TJm
(r2)
[3.902507
0
4.9815
0] Tj
-333 TJm
(=3.14;)
[7.749221
0
4.9815
0
2.767721
0
4.9815
0
4.9815
0
2.767721
0] Tj
-334 TJm
(r3=18.47;)
[3.902507
0
4.9815
0
7.749221
0
4.9815
0
4.9815
0
2.767721
0
4.9815
0
4.9815
0
2.767721
0] Tj
-333 TJm
(a)
[4.9815
0] Tj
-333 TJm
(=)
[7.749221
0] Tj
-334 TJm
(18;)
[4.9815
0
4.9815
0
2.767721
0] Tj
-333 TJm
(b=36;)
[5.535443
0
7.749221
0
4.9815
0
4.9815
0
2.767721
0] Tj
-333 TJm
(c=18)
[4.427557
0
7.749221
0
4.9815
0
4.9815
0] Tj
q
[1 0 0 1 253.27 -481.12] cm
q
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
0.3985 w
q
Q
q
0.3985 w
0.3985 w
Q
q
q
19.92554 w
0 0 m
12.96532 0 25.86276 -2.0424 38.19255 -6.04797 c
38.19223 -6.04903 l
84.94447 -21.24014 135.16003 4.34639 150.35115 51.09863 c
159.15343 78.19138 154.45146 107.87552 137.70795 130.92227 c
137.70709 130.92188 l
105.42365 175.35657 80.3063 224.64056 63.3377 276.8725 c
63.33998 276.87534 l
51.97346 311.857 14.40044 331.00172 -20.5812 319.63521 c
-40.85294 313.04903 -56.7549 297.14708 -63.34108 276.87534 c
-63.33998 276.87534 l
-80.30856 224.64342 -105.4259 175.3594 -137.70937 130.92471 c
-137.70709 130.92188 l
-166.60077 91.15198 -157.78491 35.48743 -118.01501 6.59377 c
-94.96826 -10.14973 -65.28412 -14.8517 -38.19138 -6.04942 c
-38.19223 -6.04903 l
-25.86244 -2.04346 -12.965 -0.00104 0.0003 -0.00104 c
S
Q
q
/DeviceGray {} cs
[0] sc
25.96567 114.2895 m
27.01459 115.05154 28.17807 115.64438 29.411 116.04503 c
29.41101 116.04495 l
34.08623 117.5639 36.6449 122.58543 35.12595 127.26065 c
34.24564 129.96986 32.1205 132.09499 29.41132 132.97539 c
29.41129 132.97533 l
24.18777 134.67268 19.25894 137.18355 14.81613 140.41185 c
14.81615 140.41222 l
11.84048 142.5742 7.67548 141.91463 5.51347 138.93896 c
4.26056 137.21463 3.90875 134.99344 4.56743 132.96631 c
4.56749 132.96637 l
6.26472 127.74336 7.12943 122.27985 7.12936 116.78748 c
7.12971 116.78735 l
7.1297 111.87163 11.1147 107.88641 16.03043 107.8864 c
18.87907 107.88643 21.55696 109.25075 23.23145 111.55528 c
23.23138 111.55531 l
23.99344 112.60405 24.91682 113.5274 25.96574 114.28946 c
f
Q
q
/DeviceGray {} cs
[0] sc
-25.96567 114.2895 m
-24.91675 113.52745 -23.99336 112.6041 -23.23131 111.55536 c
-23.23138 111.55531 l
-20.34192 107.57838 -14.77548 106.6969 -10.79855 109.58636 c
-8.494 111.26085 -7.12968 113.93875 -7.12965 116.78738 c
-7.12971 116.78735 l
-7.12978 122.27972 -6.26508 127.74324 -4.56784 132.96625 c
-4.56749 132.96637 l
-3.43095 136.46454 -5.3454 140.2218 -8.84357 141.35832 c
-10.87068 142.017 -13.09187 141.66519 -14.81621 140.41228 c
-14.81615 140.41222 l
-19.25896 137.18391 -24.18779 134.67303 -29.4113 132.9757 c
-29.41129 132.97533 l
-34.08636 131.45615 -36.64491 126.43459 -35.12573 121.7595 c
-34.24532 119.05034 -32.12021 116.92519 -29.41098 116.04489 c
-29.41101 116.04495 l
-28.17809 115.6443 -27.0146 115.05147 -25.96568 114.28943 c
f
Q
q
1 j
1 J
0.79701 w
19.92554 w
0 350.03741 m
45.41173 395.44914 l
S
Q
q
0.99628 w
-154.70628 -10.40555 m
154.70628 -10.40555 l
S
Q
q
0.99628 w
-154.70628 395.44914 m
154.70628 395.44914 l
S
Q
q
0.99628 w
-154.70628 316.02132 m
154.70628 316.02132 l
S
Q
q
0.99628 w
-154.70628 -10.40555 m
-154.70628 395.44914 l
S
Q
q
0.99628 w
154.70628 -10.40555 m
154.70628 395.44914 l
S
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font BISMJV+CMR10
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
